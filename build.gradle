plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.15'
    id 'org.openjfx.javafxplugin' version '0.1.0'
    id 'org.beryx.jlink' version '3.0.1'
}

group 'red.lixiang'
// window上的版本，至少需要两位
version '2.0'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.10.2'
}

sourceCompatibility = '22'
targetCompatibility = '22'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.ttplayer'
    mainClass = 'com.example.ttplayer.HelloApplication'
    applicationDefaultJvmArgs = ['-Djnativehook.lib.locator=com.example.ttplayer.JLibLocator']

}

javafx {
    version = '22.0.1'
    modules = ['javafx.controls', 'javafx.fxml','javafx.media','javafx.graphics','javafx.swing']
}

dependencies {
    implementation 'org.openjfx:javafx-controls:22'
    implementation 'org.openjfx:javafx-fxml:22'
    implementation 'org.openjfx:javafx-media:22'
    implementation "org.openjfx:javafx-graphics:22"
    implementation "org.openjfx:javafx-base:22"
    implementation 'com.github.kwhat:jnativehook:2.2.2'

}

test {
    useJUnitPlatform()
}

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'DDPlayer'
    }
}

jlinkZip {
    group = 'distribution'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(22)
    }
}


// 配置资源复制任务，确保资源文件被正确打包
task copyNativeLibs(type: Copy) {
    from zipTree(configurations.runtimeClasspath.find { it.name.contains('jnativehook') })
    include '**/*.dll', '**/*.so', '**/*.dylib'
    into "$buildDir/libs/native" // 指定目标目录
}
tasks.jlink.dependsOn copyNativeLibs

